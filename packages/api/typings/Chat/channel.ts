import type { Asset } from '../Common'

export enum ChannelType {
  Voice = 'VoiceChannel',
  Text  = 'TextChannel',
  Group = 'Group',
  DirectMessage = 'DirectMessage',
  SavedMessages = 'SavedMessages'
}

export type Permissions = {
  /**
   * Allow bit flags
   */
  a: number

  /**
   * Disallow bit flags
   */
  d: number
}

export type ChannelInvite = {
  type: 'Server'

  /**
   * Invite code
   */
  _id: string

  /**
   * ID of the server this invite points to
   */
  server: string

  /**
   * ID of user who created this invite
   */
  creator: string

  /**
   * ID of the server channel this invite points to
   */
  channel: string
}

export type TextChannel = {
  /**
   * Channel type
   */
  channel_type: ChannelType

  /**
   * Unique ID
   */
  _id: string

  /**
   * ID of the server this channel belongs to
   */
  server: string

  /**
   * Display name of the channel
   */
  name: string

  /**
   * Channel description
   */
  description: string | null

  /**
   * Representation of a File on Revolt generated by Autumn
   */
  icon: Asset | null

  /**
   * ID of the last message sent in this channel
   */
  last_message_id: string | null

  /**
   * Representation of a single permission override as it appears
   * on models and in the database
   */
  default_permissions: Permissions | null

  /**
   * Permissions assigned based on role to this channel
   */
  role_permissions: { [role: string]: Permissions } | null

  /**
   * Whether this channel is marked as not safe for work
   */
  nsfw: boolean
}

export type VoiceChannel = Omit<TextChannel,
  'channel_type' |
  'last_message_id'
> & {
  channel_type: ChannelType.Voice
}

export type SavedMessage = {
  /**
   * Channel type
   */
  channel_type: ChannelType.SavedMessages

  /**
   * Unique ID
   */
  _id: string

  /**
   * ID of the user this channel belongs to
   */
  user: string
}

export type DirectMessage = {
  /**
   * Channel type
   */
  channel_type: ChannelType.DirectMessage

  /**
   * Unique ID
   */
  _id: string

  /**
   * Whether this direct message channel is currently open on
   * both sides
   */
  active: boolean

  /**
   * 2-tuple of user IDs participating in direct message
   */
  recipients: [ string, string ]

  /**
   * ID of the last message sent in this channel
   */
  last_message_id?: string | null
}

export type GroupChannel = {
  /**
   * Channel type
   */
  channel_type: ChannelType.Group

  /**
   * Unique ID
   */
  _id: string

  /**
   * Display name of the channel
   */
  name: string

  /**
   * User ID of the owner of the group
   */
  owner: string

  /**
   * Channel description
   */
  description?: string | null

  /**
   * Array of user IDs participating in channel
   */
  recipients: string[]

  /**
   * Representation of a File on Revolt generated by Autumn
   */
  icon: Asset | null

  /**
   * ID of the last message sent in this channel
   */
  last_message_id: string | null

  /**
   * Permissions assigned to members of this group (does not
   * apply to the owner of the group)
   */
  permissions: number | null

  /**
   * Whether this group is marked as not safe for work
   */
  nsfw: boolean
}

export type RevoltChannel
  = TextChannel
  | VoiceChannel
  | SavedMessage
  | DirectMessage
  | GroupChannel

export type ServerChannel
  = TextChannel
  | VoiceChannel
